<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope,$rootScope) { // declare the scopes and the function
	/* widget controller */
	var c = this; 

	$rootScope.$on('selectNote', function(event,data) { // from the rootScope calls method $on pass it the name and the function
		c.server.get({ // request data from c.server
			action: 'getNote', // sets action from variable getNote
			noteID: $rootScope.noteID // sets noteId from de rootscope.noteId
		}).then(function(r) { //promise calls a function with variable r 
			c.data.title = r.data.note.title; // assign those
			c.data.note = r.data.note.note;
			c.data.noteID = r.data.note.sys_id;
		});
	});
	c.updateNote = function(updateType) {
		c.server.get({
			action: 'updateNote',
			noteID: c.data.noteID,
			noteBody: c.data.note,
			noteTitle: c.data.title
		}).then(function(r) {
		});
	}
}
]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>notes_body</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Notes Body</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */

	if (input && input.noteID) { // en appelant la fonction si il y a input et input.notId
		var note = new GlideRecord('x_snc_createnotes_note');// note étant la table
		if (note.get(input.noteID)) {// dans la table, si on a un retour de get
			if (input.action == 'getNote') {// si l'action du input est getNote
				data.note = {};// on initie à vide la bd json
				$sp.getRecordValues(data.note, note, "title, note, sys_id"); // data = copied here, note = glideRecord, field names
			} else if (input.action == 'updateNote') { 
				note.title = input.noteTitle; 
				note.note = input.noteBody; 
				note.update(); 
			}
		}
	} 
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-11-30 13:31:10</sys_created_on>
        <sys_id>b9ca0e8787cc0110d392eb173cbb35dc</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name>Notes Body</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_b9ca0e8787cc0110d392eb173cbb35dc</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-11-30 16:27:30</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default" ng-show="c.data.noteID">
    <div class="panel-heading clearfix">
      <div class="row">
        <div class="col-md-12">
          <input class="form-control" id="note-title" ng-model="c.data.title" ng-change="c.updateNote('title')" ng-model-options="{debounce: 1000}"/>
        </div>
      </div>
    </div>
    <div class="panel-body">
      <textarea class="form-control" id="note-body" ng-model="c.data.note" ng-change="c.updateNote('body')" ng-model-options="{debounce:1000}" ></textarea>
    </div>
  </div>]]></template>
    </sp_widget>
</record_update>
